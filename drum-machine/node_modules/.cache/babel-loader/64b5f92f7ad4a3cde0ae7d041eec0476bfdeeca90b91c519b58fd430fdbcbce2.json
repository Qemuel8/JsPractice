{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yigit\\\\Desktop\\\\Code\\\\JsPractice\\\\drum-machine\\\\src\\\\components\\\\drum-machine.jsx\";\nimport React, { Component } from 'react';\nimport getAudio from '../audio/audio';\nimport './drum-machine.css';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst audio1 = require(\"../audio/Cev_H2.mp3\");\nconst audio2 = require(\"../audio/Dsc_Oh.mp3\");\nconst audio3 = require(\"../audio/Heater-1.mp3\");\nconst audio4 = require(\"../audio/Heater-2.mp3\");\nconst audio5 = require(\"../audio/Heater-3.mp3\");\nconst audio6 = require(\"../audio/Heater-4_1.mp3\");\nconst audio7 = require(\"../audio/Heater-6.mp3\");\nconst audio8 = require(\"../audio/Kick_n_Hat.mp3\");\nconst audio9 = require(\"../audio/RP4_KICK_1.mp3\");\nconst drum = require(\"./drum.jpg\");\nclass DrumMachine extends Component {\n  constructor(props) {\n    super(props);\n    this.handleKeyDown = event => {\n      console.log(event.key.toUpperCase());\n      let audioPlay = document.getElementById(event.key.toUpperCase()).play();\n      //console.log(audioPlay);\n      if (audioPlay !== undefined) {\n        audioPlay.then(function () {}).catch(function (error) {});\n      }\n      this.setState(() => ({\n        currentKey: event.key.toUpperCase()\n      }));\n    };\n    this.togglePlay = key => {\n      let audioPlay = document.getElementById(key).play();\n      console.log(audioPlay);\n      if (audioPlay !== undefined) {\n        audioPlay.then(function () {}).catch(function (error) {});\n      }\n      this.setState(() => ({\n        currentKey: key\n      }));\n    };\n    this.state = {\n      audios: [{\n        audio: new Audio(audio1),\n        key: \"Q\",\n        sound: \"bim\"\n      }, {\n        audio: new Audio(audio2),\n        key: \"W\",\n        sound: \"bam\"\n      }, {\n        audio: new Audio(audio3),\n        key: \"E\",\n        sound: \"bom\"\n      }, {\n        audio: new Audio(audio4),\n        key: \"A\",\n        sound: \"zim\"\n      }, {\n        audio: new Audio(audio5),\n        key: \"S\",\n        sound: \"zam\"\n      }, {\n        audio: new Audio(audio6),\n        key: \"D\",\n        sound: \"zom\"\n      }, {\n        audio: new Audio(audio7),\n        key: \"Z\",\n        sound: \"ts\"\n      }, {\n        audio: new Audio(audio8),\n        key: \"X\",\n        sound: \"ks\"\n      }, {\n        audio: new Audio(audio9),\n        key: \"C\",\n        sound: \"ss\"\n      }],\n      currentKey: \"\"\n    };\n  }\n\n  //    <button className=\"drum-pad\" id='C' onClick={() => this.togglePlay(this.state.audios.audio9)} >C</button> is a working button\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      tabIndex: 0,\n      onKeyDown: this.handleKeyDown,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"drum-machine\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"drum-image\",\n          src: drum\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"drum-name\",\n          children: \"Drum Machine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 5\n        }, this), this.state.audios.map(drum => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.togglePlay(drum.key),\n          className: \"drum-pad\",\n          id: drum.sound,\n          children: [drum.key, /*#__PURE__*/_jsxDEV(\"audio\", {\n            preload: true,\n            className: \"clip\",\n            id: drum.key,\n            src: drum.audio.src\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 124\n          }, this)]\n        }, drum.sound, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"display\",\n          children: this.state.currentKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }, this);\n  }\n}\nexport default DrumMachine;","map":{"version":3,"names":["React","Component","getAudio","useEffect","audio1","require","audio2","audio3","audio4","audio5","audio6","audio7","audio8","audio9","drum","DrumMachine","constructor","props","handleKeyDown","event","console","log","key","toUpperCase","audioPlay","document","getElementById","play","undefined","then","catch","error","setState","currentKey","togglePlay","state","audios","audio","Audio","sound","render","map","src"],"sources":["C:/Users/yigit/Desktop/Code/JsPractice/drum-machine/src/components/drum-machine.jsx"],"sourcesContent":["import React, { Component } from 'react'\r\nimport getAudio from '../audio/audio'\r\nimport './drum-machine.css'\r\nimport {useEffect} from 'react';\r\n\r\nconst audio1 = require(\"../audio/Cev_H2.mp3\");\r\nconst audio2 = require(\"../audio/Dsc_Oh.mp3\");\r\nconst audio3 = require(\"../audio/Heater-1.mp3\");\r\nconst audio4 = require(\"../audio/Heater-2.mp3\");\r\nconst audio5 = require(\"../audio/Heater-3.mp3\");\r\nconst audio6 = require(\"../audio/Heater-4_1.mp3\");\r\nconst audio7 = require(\"../audio/Heater-6.mp3\");\r\nconst audio8 = require(\"../audio/Kick_n_Hat.mp3\");\r\nconst audio9 = require(\"../audio/RP4_KICK_1.mp3\");\r\nconst drum = require(\"./drum.jpg\")\r\n\r\n\r\n\r\nclass DrumMachine extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      audios:[\r\n      {\r\n        audio : new Audio(audio1),\r\n        key: \"Q\",\r\n        sound:\"bim\"\r\n      },\r\n      {\r\n        audio : new Audio(audio2),\r\n        key: \"W\",\r\n        sound:\"bam\"\r\n      },\r\n      {\r\n        audio : new Audio(audio3),\r\n        key: \"E\",\r\n        sound:\"bom\"\r\n      },\r\n       {\r\n        audio : new Audio(audio4),\r\n        key: \"A\",\r\n        sound:\"zim\"\r\n      },\r\n      {\r\n        audio : new Audio(audio5),\r\n        key: \"S\",\r\n        sound:\"zam\"\r\n      },\r\n       {\r\n        audio : new Audio(audio6),\r\n        key: \"D\",\r\n        sound:\"zom\"\r\n      },\r\n       {\r\n        audio : new Audio(audio7),\r\n        key: \"Z\",\r\n        sound:\"ts\"\r\n      },\r\n      {\r\n        audio : new Audio(audio8),\r\n        key: \"X\",\r\n        sound:\"ks\"\r\n      },\r\n       {\r\n        audio : new Audio(audio9),\r\n        key: \"C\",\r\n        sound:\"ss\"\r\n      },\r\n    ],\r\n    currentKey: \"\",\r\n      } \r\n\r\n     \r\n\r\n  }\r\n\r\n//    <button className=\"drum-pad\" id='C' onClick={() => this.togglePlay(this.state.audios.audio9)} >C</button> is a working button\r\n\r\n  handleKeyDown = (event) =>{\r\n  console.log(event.key.toUpperCase())\r\n  let audioPlay = document.getElementById(event.key.toUpperCase()).play();\r\n  //console.log(audioPlay);\r\n  if(audioPlay !== undefined){\r\n    audioPlay.then(function() {\r\n    }).catch(function(error) {\r\n\r\n    })\r\n  }\r\n  this.setState(()=>({\r\n    currentKey: event.key.toUpperCase(),     \r\n  }))\r\n}\r\n\r\n  togglePlay = (key) => {\r\n    let audioPlay = document.getElementById(key).play();\r\n    console.log(audioPlay);\r\n    if(audioPlay !== undefined){\r\n      audioPlay.then(function() {\r\n      }).catch(function(error) {\r\n\r\n      })\r\n    }\r\n    this.setState(()=>({\r\n      currentKey: key,     \r\n    }))\r\n      \r\n  }\r\n\r\n\r\n  render() { \r\n    return (\r\n    <div id=\"container\" tabIndex={0} onKeyDown={this.handleKeyDown}>\r\n    <div id='drum-machine'> \r\n    <img id=\"drum-image\" src={drum}></img>\r\n    <p id=\"drum-name\">Drum Machine</p>\r\n      {this.state.audios.map((drum)=>(\r\n\r\n        <button onClick={()=> this.togglePlay(drum.key)}  className='drum-pad' id={drum.sound} key={drum.sound} >{drum.key}<audio preload  className='clip' id={drum.key}  src={drum.audio.src}  ></audio>\r\n        </button>\r\n\r\n      ))}\r\n      <div id='display'>\r\n        {this.state.currentKey}\r\n      </div>\r\n      </div>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n \r\nexport default DrumMachine;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}